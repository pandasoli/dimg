/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_rect_free(a: number): void;
export function __wbg_get_rect_x(a: number): number;
export function __wbg_set_rect_x(a: number, b: number): void;
export function __wbg_get_rect_y(a: number): number;
export function __wbg_set_rect_y(a: number, b: number): void;
export function __wbg_get_rect_w(a: number): number;
export function __wbg_set_rect_w(a: number, b: number): void;
export function __wbg_get_rect_h(a: number): number;
export function __wbg_set_rect_h(a: number, b: number): void;
export function __wbg_size_free(a: number): void;
export function __wbg_res_free(a: number): void;
export function __wbg_get_res_status(a: number): number;
export function __wbg_set_res_status(a: number, b: number): void;
export function __wbg_get_res_err(a: number, b: number): void;
export function __wbg_set_res_err(a: number, b: number, c: number): void;
export function __wbg_get_res_res(a: number, b: number): void;
export function __wbg_set_res_res(a: number, b: number, c: number): void;
export function res_new(): number;
export function rect_new(a: number, b: number, c: number, d: number): number;
export function size_new(a: number, b: number): number;
export function __wbg_set_size_h(a: number, b: number): void;
export function __wbg_get_size_w(a: number): number;
export function __wbg_set_size_w(a: number, b: number): void;
export function __wbg_get_size_h(a: number): number;
export function resize(a: number, b: number, c: number, d: number): number;
export function crop(a: number, b: number, c: number): number;
export function rotate(a: number, b: number, c: number): number;
export function flip(a: number, b: number, c: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
